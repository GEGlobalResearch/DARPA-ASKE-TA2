prefix hyper:<http://aske.ge.com/hypersonics#>
prefix dbn:<http://aske.ge.com/dbn#>
prefix imp:<http://sadl.org/sadlimplicitmodel#>
prefix mm:<http://aske.ge.com/metamodel#>

# Output variable, values, Equation or distribution, 

select 
  strafter(str(?Output),"#") as ?Output 
  group_concat(distinct ?Val;separator=", ") as ?Values 
  strafter(str(?EquationOrDistr),"#") as ?EquationOrDistr 
  group_concat(distinct strafter(str(?Input),"#"); separator=", ") as ?Inputs 
where {
 {select ?Output ?EquationOrDistr ?Val ?Input where {
  ?cq mm:subgraph ?sg.
  ?sg mm:cgraph / dbn:hasEquation ?eqBN.
  ?eqBN a ?EquationOrDistr.
  ?sg dbn:output ?OBN.
  ?OBN a ?Output.
  ?OBN imp:value ?Val.
  optional {?EquationOrDistr dbn:parent ?PQ. 
            ?PQ rdfs:subClassOf ?PQBN.
            ?PQBN owl:onProperty imp:output.
            ?PQBN owl:allValuesFrom ?Input}
  #filter regex(str(?EquationOrDistr), "hypersonics") 
 }}
 union
 {select ?EquationOrDistr ?Output ?Val where {
  ?cq1 mm:subgraph ?sg.
  ?sg mm:cgraph / dbn:distribution ?EquationOrDistr.
  ?sg dbn:output ?OBN.
  ?OBN a ?Output.
  ?OBN imp:value ?Val.
  filter not exists {?sg dbn:hasEquation ?eq.}
 }}
  #filter regex(str(?Output), "hypersonics")
}


select ?Out ?C ?Val ?parent where {
  ?cq mm:subgraph ?sg.
  ?sg mm:cgraph / dbn:hasEquation ?eqBN.
  ?eqBN a ?C.
  ?sg dbn:output ?OBN.
  ?OBN a ?Out.
  ?OBN imp:value ?Val.
  optional {?C dbn:parent ?PQ. 
            ?PQ rdfs:subClassOf ?PQBN.
            ?PQBN owl:onProperty imp:output.
            ?PQBN owl:allValuesFrom ?parent}
  #filter regex(str(?C), "hypersonics") 
 }