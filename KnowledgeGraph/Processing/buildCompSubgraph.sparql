prefix hyper:<http://aske.ge.com/hypersonics#>
prefix dbn:<http://aske.ge.com/dbn#>
prefix imp:<http://sadl.org/sadlimplicitmodel#>
prefix owl:<http://www.w3.org/2002/07/owl#>
prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>
prefix sci:<http://aske.ge.com/sciknow#>

select distinct ?DBN ?Out (group_concat(distinct ?Eq ; separator=',') as ?Eqns)
from <http://kd.ge.com/aske3>
where {

  {select ?Eq where { 
    ?EqOut a ?EqClass. 
    ?EqClass rdfs:subClassOf imp:Equation. 
     ?EqOut imp:output ?Oinst.
     ?Oinst a ?Out1.
     filter (?Out1 in ( <http://aske.ge.com/hypersonics#TotalTemperature> )).
     ?EqOut dbn:parent* ?Eq.
    ?Eq imp:input/imp:argType ?In.
    filter (?In in (<http://aske.ge.com/hypersonics#Altitude>)).
  } }   
  union {
   select ?Eq where {
     ?EqOut a ?EqClass. 
     ?EqClass rdfs:subClassOf imp:Equation.
     ?EqOut imp:output ?Oinst.
     ?Oinst a ?Out.
     filter (?Out in ( <http://aske.ge.com/hypersonics#TotalTemperature> )).
     ?EqOut dbn:parent* ?Eq.
     ?Eq imp:input/imp:argType ?In.
      ?Eq2 a ?EqClass2. 
      ?EqClass2 rdfs:subClassOf imp:Equation.
      ?Eq2 imp:output ?Oi.
      ?Oi a ?In. 
   }}
 ?Eq imp:output ?Oi.
 ?Oi a ?Out.
 ?DBN rdfs:subClassOf ?EQR.
 ?EQR owl:onProperty sci:hasEquation.
 ?EQR owl:allValuesFrom ?EqClass.
 ?Eq a ?EqClass.
}








# http://aske.ge.com/hypersonics#Altitude
# http://aske.ge.com/hypersonics#AirSpeed
# http://aske.ge.com/hypersonics#TotalPressure
# http://aske.ge.com/hypersonics#TotalTemperature

prefix dbn:<http://aske.ge.com/dbn#>
prefix imp:<http://sadl.org/sadlimplicitmodel#>
prefix owl:<http://www.w3.org/2002/07/owl#>
prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>
prefix sci:<http://aske.ge.com/sciknow#>


select distinct ?Eq ?DBN ?Out where {
 {select ?Eq where {
    ?EqOut a imp:Equation.
     ?EqOut imp:output ?Oinst.
     ?Oinst a ?Out.
     filter (?Out in ( <http://aske.ge.com/hypersonics#TotalTemperature> )).
     ?EqOut dbn:parent* ?Eq.

    ?Eq imp:input/imp:argType ?In.
    filter (?In in (<http://aske.ge.com/hypersonics#Altitude>)).
  }}
   union {
   select ?Eq where {
     ?EqOut a imp:Equation.
     ?EqOut imp:output ?Oinst.
     ?Oinst a ?Out.
     filter (?Out in ( <http://aske.ge.com/hypersonics#TotalTemperature> )).
     ?EqOut dbn:parent* ?Eq.
     ?Eq imp:input/imp:argType ?In.
      ?Eq2 a imp:Equation.
      ?Eq2 imp:output ?Oi.
      ?Oi a ?In. 
   }}
 ?Eq imp:output ?Oi.
 ?Oi a ?Out.
 ?DBN rdfs:subClassOf ?EQR.
 ?EQR owl:onProperty sci:hasEquation.
 ?EQR owl:someValuesFrom ?Eq.
}



select distinct ?Eq ?DBN ?Out where { 
  {select ?Eq where {
     ?EqOut a imp:Equation.
     ?EqOut imp:output ?Oinst.
     ?Oinst a ?Out.
     filter (?Out in ( <http://aske.ge.com/hypersonics#TotalTemperature> )).
     ?EqOut dbn:parent* ?Eq.
  }}
  minus
  {select distinct ?Eq where { 
    ?EqB a imp:Equation.
    ?EqB imp:input/imp:argType ?In.
    filter (?In in (<http://aske.ge.com/hypersonics#Altitude>)).
    ?Eq dbn:parent* ?EqB. 
    # and have a non-given input without an eqn.
    ?Eq imp:input/imp:argType ?In1.
    filter (?In1 not in (<http://aske.ge.com/hypersonics#Altitude>)).
    filter not exists {
       ?Eq2 a imp:Equation.
       ?Eq2 imp:output ?Oi.
       ?Oi a ?In1.} 
  }}
  minus 
  {select distinct ?Eq where {
    ?EqB a imp:Equation.
    ?EqB imp:input/imp:argType ?In.
    filter (?In in (<http://aske.ge.com/hypersonics#Altitude>)).
    ?Eq dbn:parent* ?EqB. 

    filter not exists {
      ?Eq dbn:parent* ?EqX.
      filter not exists { ?EqX dbn:parent ?EqB}
    }
   }}
 ?Eq imp:output ?Oi.
 ?Oi a ?Out.
 ?DBN rdfs:subClassOf ?EQR.
 ?EQR owl:onProperty sci:hasEquation.
 ?EQR owl:someValuesFrom ?Eq.

}




## Given input Altitude and output TotalTemp, find the equations needed
## Still includes eqns whose output is actually not needed (eg SpeedOfSound)
select distinct ?Eq ?DBN ?Out where { 
  {select ?Eq where { # Find all ancestors of TT equation, incl.
     ?EqOut rdfs:subClassOf ?IBO.
     ?IBO owl:onProperty imp:output.
     ?IBO owl:allValuesFrom ?Out.
     filter (?Out in ( <http://aske.ge.com/hypersonics#TotalTemperature> )).
     ?EqOut dbn:parent* ?Eq.
  }}
  minus 
  {select distinct ?Eq where { # Eqns that have a non-given input that has no eqn (eg. MachSpeed has Airspeed)
  # Descendants of eqns that take one of the given inputs, incl.
  ?EqB rdfs:subClassOf ?IBO.
  ?IBO owl:onProperty imp:input.
  ?IBO owl:someValuesFrom ?In.
  filter (?In in (<http://aske.ge.com/hypersonics#Altitude>)).
  ?Eq dbn:parent* ?EqB. 

  # and have a non-given input without an eqn.
  ?Eq rdfs:subClassOf ?B1.
  ?B1 owl:onProperty imp:input.
  ?B1 owl:someValuesFrom ?In1.
  filter (?In1 not in (<http://aske.ge.com/hypersonics#Altitude>)).
  filter not exists {
     ?Eq2 rdfs:subClassOf ?B2.
     ?B2 owl:onProperty imp:output.
     ?B2 owl:allValuesFrom ?In1.}
  }}
  minus 
  {select distinct ?Eq where { # Eqns that have an ancestor that is not a descendant of eqns that take given inputs
  ?EqB rdfs:subClassOf ?IBO.
  ?IBO owl:onProperty imp:input.
  ?IBO owl:someValuesFrom ?In.
  filter (?In in (<http://aske.ge.com/hypersonics#Altitude>)).
  ?Eq dbn:parent* ?EqB. 

  filter not exists {
    ?Eq dbn:parent* ?EqX.
    filter not exists { ?EqX dbn:parent ?EqB}
  }
}}
 ?Eq rdfs:subClassOf ?BO.
 ?BO owl:onProperty imp:output.
 ?BO owl:allValuesFrom ?Out.
 ?DBN rdfs:subClassOf ?EQR.
 ?EQR owl:onProperty sci:hasEquation.
 ?EQR owl:someValuesFrom ?Eq.
}