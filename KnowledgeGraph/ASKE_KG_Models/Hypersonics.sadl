uri "http://aske.ge.com/hypersonics" alias hypersonics .

import "http://aske.ge.com/sciknow".

Altitude is a type of UnittedQuantity.
AtmosphericTemperature is a type of UnittedQuantity.
AtmosphericPressure is a type of UnittedQuantity.
SpeedOfSound is a type of UnittedQuantity.
StaticTemperature is a type of AtmosphericTemperature.
StaticPressure is a type of AtmosphericPressure.
Speed is a type of UnittedQuantity.
AirSpeed is a type of Speed.
MachSpeed is a type of Speed.
TotalTemperature is a type of AtmosphericTemperature.
TotalPressure is a type of AtmosphericPressure.

//Air is a class
//  described by altitude with values of type Altitude,
//	described by ttemp with values of type TotalTemperature.

//alt is a Altitude ^value 100.
//
//Aircraft is a class
//	described by phyproperty with values of type UnittedQuantity.
//
//altitude is a type of phyproperty.
//statictemp is a type of phyproperty.
//	
//a1 is an Aircraft
//	with altitude  (a Altitude with ^value 30000)
//	.
	
AltitudeDBN is a type of DBN.
node of AltitudeDBN always has value (a Argument argType Altitude argName "altitude").
//sciknow:input of AltitudeDBN always has value null.
distribution of AltitudeDBN always has value uniform.
range of AltitudeDBN always has value (a Range lower 0 upper 60000).

AirSpeedDBN is a type of DBN.
node of AirSpeedDBN always has value (a Argument argType AirSpeed argName "speed").
distribution of AltitudeDBN always has value uniform.
range of AirSpeedDBN always has value (a Range lower 0 upper 5000).

//Equation stEq1(Altitude alt) returns StaticTemperature: a StaticTemperature.
//stEq1 expression "518.6-3.56 * Altitude /1000.0".

//Ask ShowEquationReturningType (note "takes 1 parameter, the Semantic type of the return value"): "select ?eq ?script where {?eq <sciknow:output> ?output . ?output <rdf:type> ? . ?eq <expression> ?expr . ?expr <script> ?script}".

//sciknow:sciknow:input of StaticTempEq always has value (a Argument argType Altitude argName "alt").
////sciknow:sciknow:input of StaticTempEq has at least one value of type Altitude. //No, because it may be sampled?
StaticTemperatureEquation is a type of ^Equation.

StaticTemperatureEq is a StaticTemperatureEquation
sciknow:input (a Argument argType Altitude argName "altitude")
sciknow:output (a StaticTemperature)
//expression "518.6-3.56 * altitude /1000.0"
//assumption "altitude < 36152"
expression (a Script with script "518.6-3.56 * altitude /1000.0", with language Text)
.
StaticTemperatureEq2 is a StaticTemperatureEquation 
sciknow:input (a Argument argType Altitude argName "altitude")
sciknow:output (a StaticTemperature)
expression (a Script with script  "389.98", with language Text).

StaticTempDBN is a type of DBN.
hasEquation of StaticTempDBN only has values of type StaticTemperatureEquation. //StaticTempEq. //or StaticTempEq2) .
//hasEquation of StaticTempDBN has at most one value of type StaticTempEq2. // {StaticTempEq or StaticTempEq2} .
range of StaticTempDBN always has value (a Range with lower 0 with upper 60000).
distribution of StaticTempDBN always has value uniform. //should be default value


StaticPressureEquation is a type of ^Equation.

//StaticPressureEq is a ^Equation
StaticPressureEq is a StaticPressureEquation
sciknow:input (a Argument argType Altitude argName "altitude")
sciknow:output (a StaticPressure)
expression (a Script with script "2116.0*((518.6-3.56*altitude/1000.0)/518.6)**5.256", with language Text).
//expression "2116.0*((518.6-3.56*altitude/1000.0)/518.6)**5.256".
//input of StaticPressureEq has at most one value of type Altitude.
//sciknow:output of StaticPressureEq only has values of type StaticPressure.
//	//with expression "2116.0*(ts0/518.6)**5.256"
//	//plugged in ts0 expresion
//expression  of StaticPressureEq always has value "2116.0*((518.6-3.56*alt/1000.0)/518.6)**5.256".

StaticPressureEq2 is a StaticPressureEquation
sciknow:input (a Argument argType StaticTemperature argName "ts0")
sciknow:output (a StaticPressure)
expression (a Script with script "2116.0*(ts0/518.6)**5.256", with language Text).

StaticPressureDBN is a type of DBN.
hasEquation of  StaticPressureDBN only has values of type StaticPressureEquation.
range of StaticPressureDBN always has value (a Range with lower 0 with upper 20000).
distribution of StaticPressureDBN always has value uniform.

SpeedOfSoundEquation is a type of ^Equation.

//SpeedOfSoundEq is a ^Equation
SpeedOfSoundEq is a SpeedOfSoundEquation
sciknow:input (a Argument argType StaticTemperature argName "ts0")
sciknow:output (a SpeedOfSound)
expression (a Script with script "(1.4*1718.0*ts0)**0.5", with language Text).
//sciknow:input of SpeedOfSoundEq has at most one value of type StaticTemperature.
//sciknow:output of SpeedOfSoundEq only has values of type SpeedOfSound.
//expression  of SpeedOfSoundEq always has value "(1.4*1718.0*ts0)**0.5".

SpeedOfSoundDBN is a type of DBN.
hasEquation of  SpeedOfSoundDBN only has values of type SpeedOfSoundEquation.
range of SpeedOfSoundDBN always has value (a Range with lower 0 with upper 20000).
distribution of SpeedOfSoundDBN always has value uniform.

MachSpeedEquation is a type of ^Equation.

//MachSpeedEq is a ^Equation
MachSpeedEq is a MachSpeedEquation
sciknow:input (a Argument argType AirSpeed argName "u0")
sciknow:input (a Argument argType SpeedOfSound argName "a0")
sciknow:output (a MachSpeed)
expression (a Script with script "u0/5280.0 * 3600.0 / a0", with language Text).
//sciknow:input of MachSpeedEq has at most one value of type SpeedOfSound.
//sciknow:output of MachSpeedEq only has values of type MachSpeed.
//expression  of MachSpeedEq always has value "u0/5280.0 * 3600.0 / a0".

MachSpeedDBN is a type of DBN.
hasEquation of  MachSpeedDBN only has values of type MachSpeedEquation.
range of MachSpeedDBN always has value (a Range with lower 0 with upper 20000).
distribution of MachSpeedDBN always has value uniform.

TotalTemperatureEquation is a type of ^Equation.

//TotalTemperatureEq is a ^Equation
TotalTemperatureEq is a TotalTemperatureEquation
sciknow:input (a Argument argType StaticTemperature argName "ts0")
sciknow:input (a Argument argType MachSpeed argName "mach")
sciknow:output (a TotalTemperature)
expression (a Script with script "ts0*(1.0 + 0.5*(1.4-1.0)*mach*mach)", with language Text).
//sciknow:input of TotalTemperatureEq has at most one value of type StaticTemperature.
//sciknow:input of TotalTemperatureEq has at most one value of type MachSpeed.
//sciknow:output of TotalTemperatureEq only has values of type TotalTemperature.
//expression  of TotalTemperatureEq always has value "ts0*(1.0 + 0.5*(1.4-1.0)*mach*mach)".

TotalTemperatureDBN is a type of DBN.
hasEquation of  TotalTemperatureDBN only has values of type TotalTemperatureEquation.
range of TotalTemperatureDBN always has value (a Range with lower 0 with upper 20000).
distribution of TotalTemperatureDBN always has value uniform.

TotalPressureEquation is a type of ^Equation.

//TotalPressureEq is a ^Equation
TotalPressureEq is a TotalPressureEquation
sciknow:input (a Argument argType StaticPressure argName "ps0")
sciknow:input (a Argument argType MachSpeed argName "mach")
sciknow:output (a TotalPressure)
expression (a Script with script "ps0*(1.0 + 0.5*(1.4-1.0)*mach*mach)**(1.4/(1.4-1.0))", with language Text).
//sciknow:input of TotalPressureEq has at most one value of type StaticPressure.
//sciknow:input of TotalPressureEq has at most one value of type MachSpeed.
//sciknow:output of TotalPressureEq only has values of type TotalPressure.
//expression  of TotalPressureEq always has value "ps0*(1.0 + 0.5*(1.4-1.0)*mach*mach)**(1.4/(1.4-1.0))".

TotalPressureDBN is a type of DBN.
hasEquation of  TotalPressureDBN only has values of type TotalPressureEquation.
range of TotalPressureDBN always has value (a Range with lower 0 with upper 20000).
distribution of TotalPressureDBN always has value uniform.



//An instance equation with given sciknow:input. This would come from a query?
//stTempEq1 is a StaticTempEq
//	with sciknow:sciknow:input (a Altitude with ^value 10000)
//	//with sciknow:sciknow:output (a StaticTemperature)
//	.

//totalPressureEq is an ^Equation
//	with sciknow:input (a StaticPressure ps0)
//	with sciknow:input (a MachSpeed mach)
//	with sciknow:output (a TotalPressure tp)
//	//with expression "ps0*(tt0/ts0)**(1.4/(1.4-1.0))"
//	//plugging in tt0 expression
//	with expression "ps0*(1.0 + 0.5*(1.4-1.0)*mach*mach)**(1.4/(1.4-1.0))"
//	with ^type equation
//	with distribution uniform
//	with range (a Range with lower -200 with upper 200)
//	.



//staticTemperatureDBN is a StaticTemperatureDBN
//	//with hasEquation staticTemperatureEq
//	with hasEquation stTempEq1
//	//with ^type equation
//	with distribution uniform
//	with range (a Range with lower -200 with upper 200)
//	.
//staticTemperatureEq is an ^Equation
//	with sciknow:input (a Altitude alt)
//	with sciknow:output (a StaticTemperature ts0)
//	with expression "518.6-3.56*alt/1000.0"
//	.
//staticTemperatureDBN is a DBN
//	//with hasEquation staticTemperatureEq
//	with hasEquation (a StaticTempEq)
//	with ^type equation
//	with distribution uniform
//	with range (a Range with lower -200 with upper 200)
//	.


//Rule parentrule:
//  if ?Eq has sciknow:input ?In and ?In a ?sciknow:input and ?sciknow:input 

//External staticAlt(Altitude alt) returns StaticTemperature:
//	"http://statictemp" located at "file://".


	
//ts0 is an AtmosphericTemperature  //, DBN_Node
//    with parent (an Altitude with symbol "alt")
//    with ntype Continuous
//    with distribution Uniform
//    with range (a Range with lower LLL with upper UUU
//    with model (a Model with modelType equation
//    	       	  	with modelForm "518.6 - 3.56 * alt / 1000.")
//    .
//
//ps0 is an AtmosphericPressure  //, DBN_Node
//    with parent (an Altitude with symbol "alt")
//    with ntype Continuous
//    with distribution Uniform
//    with range (a Range with lower LLL with upper UUU
//    with model (a Model with modelType equation
//    	       	  	with modelForm "2116. * Math.pow(ts0/518.6, 5.256)")
//    .
//
//a0 is a SpeedOfSound, DBN_Node
//   with parent ts0
//   with ntype Continuous
//   with distribution Uniform
//   with range (a Range with lower LLL with upper UUU)
//   with model (a Model with modelType equation
//    	       	       with modelForm "Math.sqrt(gama*rgas*ts0)")
//    .
//
//u0 is a AirSpeed, DBN_Node.
//
//fsmach is a MachSpeed
//   with parent a0
//   with parent u0
//   with model (a Model with modelType equation
//   	       	       with modelForm "u0/a0"
//   .