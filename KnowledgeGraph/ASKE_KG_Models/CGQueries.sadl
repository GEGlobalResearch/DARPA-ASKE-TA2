/**********************************************************************
* Note: This license has also been called the "New BSD License" or
* "Modified BSD License". See also the 2-clause BSD License.
*
* Copyright Â© 2018-2019 - General Electric Company, All Rights Reserved
*
* Project: KApEESH, developed with the support of the Defense Advanced
* Research Projects Agency (DARPA) under Agreement  No.  HR00111990007.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
* 1. Redistributions of source code must retain the above copyright notice,
*    this list of conditions and the following disclaimer.
*
* 2. Redistributions in binary form must reproduce the above copyright notice,
*    this list of conditions and the following disclaimer in the documentation
*    and/or other materials provided with the distribution.
*
* 3. Neither the name of the copyright holder nor the names of its
*    contributors may be used to endorse or promote products derived
*    from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
* THE POSSIBILITY OF SUCH DAMAGE.
*
***********************************************************************/
 uri "http://aske.ge.com/CGQueries" alias cgqueries.
 
 import "http://aske.ge.com/metamodel".
 import "http://aske.ge.com/hypersonics".
 
// cgq1 is a CGQuery
// 	mm:input (a Altitude with ^value 30000)
// 	mm:output (a TotalTemperature tt) //same instance as output in sg3
// 	with execution cge1 with compGraph cg1
// 	.
// 		
// cge1 is a CGExecution.
//// 	startTime	"2019-01-26T21:32:52"
//// 	endTime		"2019-01-26T21:45:25"
//// 	compGraph cg1
//// 	accuracy .05
//// 	.
  	
// cg1 is a CCG
//   subgraph sg1
//   subgraph sg2 
//   subgraph sg3 	.
 
// cg3 is a CCG
// 	subgraph (a SubGraph cgraph (a StaticTempDBN hasEquation TotalTemperatureEq) 
// 		                 mm:output (a StaticTemperature ^value 483) ) .
// 
// sg1 is a SubGraph
//	cgraph (a StaticTempDBN hasEquation StaticTempEq)
//	mm:output (a StaticTemperature ^value 483).
//
//// This node was sampled
//sg2 is a SubGraph
//	cgraph (a MachSpeedDBN distribution uniform)
//	mm:output (a MachSpeed ^value 1.0 ^value 1.5 ^value 2.0) 
//    .
//sg3 is a SubGraph
//	cgraph (a TotalTemperatureDBN hasEquation TotalTemperatureEq)
//	mm:output (a TotalTemperature tt ^value 200 ^value 250 ^value 300)
//	.
//
//// Query with Altitude and Speed
// cgq2 is a CGQuery
// 	mm:input (a Altitude with ^value 30000)
// 	mm:input (a AirSpeed with ^value 2000)
// 	mm:output (a TotalTemperature tt1) //same instance as sg24
// 	with execution cge2 with compGraph cg2 .
//  	
// cge2 is a CGExecution.
//  	
// cg2 is a CCG
//   subgraph sg21
//   subgraph sg22 
//   subgraph sg23 
//   subgraph sg24 	.
// 
// sg21 is a SubGraph
//	cgraph (a StaticTempDBN hasEquation StaticTempEq)
//	mm:output (a StaticTemperature ^value 420) .
//
//sg22 is a SubGraph
//	cgraph (a SpeedOfSoundDBN hasEquation SpeedOfSoundEq)
//	mm:output (a SpeedOfSound ^value 1000) 
//    .
//
//sg23 is a SubGraph
//	cgraph (a MachSpeedDBN hasEquation MachSpeedEq)
//	mm:output (a MachSpeed ^value 3.0 ) 
//    .
//sg24 is a SubGraph
//	cgraph (a TotalTemperatureDBN hasEquation TotalTemperatureEq)
//	mm:output (a TotalTemperature tt1 ^value 500)
//	.

	
//dbn3 is a DBN
//	hasEquation (a TotalTemperatureEq output (a TotalTemperature ^value 483))
//	distribution uniform
//	.