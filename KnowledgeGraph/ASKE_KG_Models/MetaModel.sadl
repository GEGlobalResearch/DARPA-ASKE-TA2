uri "http://aske.ge.com/metamodel" alias mm.
 
import "http://aske.ge.com/sciknow".

CCG is a type of ComputationalGraph
    described by subgraph with values of type SubGraph
    described by modelError with values of type decimal
 	.
 
KChain is a type of ComputationalGraph.

SubGraph is a class
 	described by cgraph with values of type ComputationalGraph
 	described by mm:output with values of type UnittedQuantity
 	.

QueryType is a class must be one of {prognostic,calibration,explanation}.
 
CGQuery is a class
	described by queryType with a single value of type QueryType
 	described by mm:input with values of type UnittedQuantity
 	described by mm:output with values of type UnittedQuantity
 	described by machineGenerated with a single value of type boolean
 	described by execution with values of type CGExecution
 	.
 	
CGExecution is a class
 	described by startTime with a single value of type dateTime
 	described by endTime with a single value of type dateTime
 	described by compGraph with values of type ComputationalGraph
 	described by accuracy with values of type decimal
	.

Dataset is a type of Thing
	described by creator with a single value of type string //Person
//	described by location with a single value of type string
	.

CSVDataset is a type of Dataset
	described by column with values of type CSVColumn 
	.
	
CSVColumn is a type of Thing
	described by header with values of type string
	described by colType with values of type string
	described by variable with values of type UnittedQuantity //Variable
	described by percentMissingValues with values of type float
	. 

parent describes ^Equation with values of type ^Equation.


Ask ShowModelEquations: 
"select distinct  (?eq as ?Equation) ?Assumptions
 where {
  ?CG a <CCG>.
  values ?I { ? }.
  filter (regex(str(?CG), strafter(str(?I),'#') )).
  ?CG <subgraph> ?SG.
  ?SG <cgraph> ?DBN.
  ?DBN <hasEquation> ?eq. 
  ?eq <expression> ?expr .
  optional{?eq <assumption> ?Assumptions.}
 }".

//  ?CG <subgraph> ?SG.
//  ?SG <cgraph> ?DBN.
//  ?DBN <hasEquation> ?eq. 
//  ?eq <expression> ?expr .
//  ?expr <script> ?script.
//  optional{?eq <assumption> ?Assumptions.}


	//(?eq as ?eqID)
//Rule DependencyGraph
//	if ?Eq is a rdfs:subClassOf ^Equation and
//	   ?Eq is a rdfs:subClassOf ?IB and 
//	then ?Eq parent